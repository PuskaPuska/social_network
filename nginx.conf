#User from which Nginx will work
user nginx;

#Number of working processes
worker_processes auto;

#Where to write error logs? What level of notifications to send?
error_log /var/log/nginx/error.log;

#The block in which the maximum number of connections and the method by which we subscribe to events from the OS are set
events {

    #The total maximum number of clients served will be worker_processes * worker_connections;
    worker_connections 1024;
}

#Description of virtual servers
http {
        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
        '$status $body_bytes_sent "$http_referer" '
        '"$http_user_agent" "$http_x_forwarded_for" "$http_x_forwarded_host"';

        access_log  /var/log/nginx/access.log  main;

        #Allows you to send data to the network, bypassing the stage of copying them into the address space of the application.
        #In many cases, this significantly improves server performance, so the sendfile parameter is always better to include.
		sendfile            on;

		tcp_nopush          on;

		tcp_nodelay         on;

        #Responsible for the maximum time to maintain a keepalive connection, in case the user requests nothing from it.
		keepalive_timeout   65;
		types_hash_max_size 2048;

		#Length of request from client
		client_max_body_size 500M;

        include             /etc/nginx/mime.types;
		default_type        application/octet-stream;

        #Virtual Host Description
		server {
			listen       8888 default_server;
			listen       [::]:8888 default_server;
			server_name  _;

			set $fix_remote_addr $http_x_f5_ip; if ( $fix_remote_addr = '' ) { set $fix_remote_addr $remote_addr; }

			location / {
			   root /www;
			   index index.html;

			   try_files $uri$args $uri$args/ $uri/ /index.html;
			   error_page 404 =404 /index.html;
			}

            #Proxy presenter on backend
			location /api {
			   proxy_pass http://localhost:9292/api;
			   proxy_set_header Host            $host;
			   proxy_set_header X-Forwarded-For $remote_addr;
			   proxy_set_header        X-Forwarded-Port   443;
			   proxy_set_header        X-Forwarded-Proto  https;

			   # enables WS support
               proxy_http_version 1.1;
               proxy_set_header Upgrade $http_upgrade;
               proxy_set_header Connection  "upgrade";

               proxy_read_timeout 900s;

			}

			error_page 404 /404.html;
				location = /40x.html {
			}

			error_page 500 502 503 504 /50x.html;
				location = /50x.html {
			}
		}
}
